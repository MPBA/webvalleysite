import csv

from django.conf import settings
from django.shortcuts import render
from django.core.urlresolvers import reverse
from django.core.cache import cache
try:
    from cStringIO import StringIO
except ImportError:
    from StringIO import StringIO

import gspreadsheet as gss

def display(request):
    raw_data = csv.reader(StringIO(_csv_get()))
    data = []
    for row in raw_data:
        if row[1]:
            data.append({ 'date': row[0]+u', '+row[1],
                          'activities': [] })
        act = { 'time': row[2],
                'name': row[3],
                'teachers': row[4],
                'links': [] }
        for cell in row[5:]:
            if cell:
                if 'dropbox' in cell:
                    ext = cell.split('.')[-1]
                else:
                    ext = "WWW"
                act['links'].append({ 'href': cell,
                                      'extension': ext })
        data[-1]['activities'].append(act)

    return render(request, "timetable/display.html", {'data': data,
                                                      'page_title': 'Time table',
                                                      'sidebar_item': 'timetable',})

def _csv_get():
    """
    Return the csv file as a string, downloading it if needed.
    """
    cache_key = reverse('timetable.views.display')
    ret = cache.get(cache_key)
    if ret is not None:
        return ret
    else:
        ret = _csv_download()
        cache.set(cache_key, ret, timeout=15)  # cache lasts 15 seconds
        return ret

def _csv_download():
    """
    Return the downloaded csv as a string.
    """
    gsession = gss.Client(settings.TIMETABLE_GOOGLE_USER,
                          settings.TIMETABLE_GOOGLE_PASSWORD)
    ss = gss.Spreadsheet(settings.TIMETABLE_SPREADSHEET)
    csv_file = gsession.download(ss, gid=settings.TIMETABLE_SPREADSHEET_GID)
    return csv_file.read()
